// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ocpirpc/command.proto

package ocpirpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReserveNowRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ExpiryDate           string   `protobuf:"bytes,2,opt,name=expiry_date,json=expiryDate,proto3" json:"expiry_date,omitempty"`
	LocationUid          string   `protobuf:"bytes,3,opt,name=location_uid,json=locationUid,proto3" json:"location_uid,omitempty"`
	EvseUid              string   `protobuf:"bytes,4,opt,name=evse_uid,json=evseUid,proto3" json:"evse_uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReserveNowRequest) Reset()         { *m = ReserveNowRequest{} }
func (m *ReserveNowRequest) String() string { return proto.CompactTextString(m) }
func (*ReserveNowRequest) ProtoMessage()    {}
func (*ReserveNowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c9ab853259f9e2c, []int{0}
}

func (m *ReserveNowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReserveNowRequest.Unmarshal(m, b)
}
func (m *ReserveNowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReserveNowRequest.Marshal(b, m, deterministic)
}
func (m *ReserveNowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveNowRequest.Merge(m, src)
}
func (m *ReserveNowRequest) XXX_Size() int {
	return xxx_messageInfo_ReserveNowRequest.Size(m)
}
func (m *ReserveNowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveNowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveNowRequest proto.InternalMessageInfo

func (m *ReserveNowRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ReserveNowRequest) GetExpiryDate() string {
	if m != nil {
		return m.ExpiryDate
	}
	return ""
}

func (m *ReserveNowRequest) GetLocationUid() string {
	if m != nil {
		return m.LocationUid
	}
	return ""
}

func (m *ReserveNowRequest) GetEvseUid() string {
	if m != nil {
		return m.EvseUid
	}
	return ""
}

type ReserveNowResponse struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	ReservationId        int64    `protobuf:"varint,3,opt,name=reservationId,proto3" json:"reservationId,omitempty"`
	ExpiryDate           string   `protobuf:"bytes,4,opt,name=expiry_date,json=expiryDate,proto3" json:"expiry_date,omitempty"`
	LocationUid          string   `protobuf:"bytes,5,opt,name=location_uid,json=locationUid,proto3" json:"location_uid,omitempty"`
	EvseUid              string   `protobuf:"bytes,6,opt,name=evse_uid,json=evseUid,proto3" json:"evse_uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReserveNowResponse) Reset()         { *m = ReserveNowResponse{} }
func (m *ReserveNowResponse) String() string { return proto.CompactTextString(m) }
func (*ReserveNowResponse) ProtoMessage()    {}
func (*ReserveNowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c9ab853259f9e2c, []int{1}
}

func (m *ReserveNowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReserveNowResponse.Unmarshal(m, b)
}
func (m *ReserveNowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReserveNowResponse.Marshal(b, m, deterministic)
}
func (m *ReserveNowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveNowResponse.Merge(m, src)
}
func (m *ReserveNowResponse) XXX_Size() int {
	return xxx_messageInfo_ReserveNowResponse.Size(m)
}
func (m *ReserveNowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveNowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveNowResponse proto.InternalMessageInfo

func (m *ReserveNowResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ReserveNowResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ReserveNowResponse) GetReservationId() int64 {
	if m != nil {
		return m.ReservationId
	}
	return 0
}

func (m *ReserveNowResponse) GetExpiryDate() string {
	if m != nil {
		return m.ExpiryDate
	}
	return ""
}

func (m *ReserveNowResponse) GetLocationUid() string {
	if m != nil {
		return m.LocationUid
	}
	return ""
}

func (m *ReserveNowResponse) GetEvseUid() string {
	if m != nil {
		return m.EvseUid
	}
	return ""
}

type StartSessionRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	LocationUid          string   `protobuf:"bytes,2,opt,name=location_uid,json=locationUid,proto3" json:"location_uid,omitempty"`
	EvseUid              string   `protobuf:"bytes,3,opt,name=evse_uid,json=evseUid,proto3" json:"evse_uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartSessionRequest) Reset()         { *m = StartSessionRequest{} }
func (m *StartSessionRequest) String() string { return proto.CompactTextString(m) }
func (*StartSessionRequest) ProtoMessage()    {}
func (*StartSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c9ab853259f9e2c, []int{2}
}

func (m *StartSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartSessionRequest.Unmarshal(m, b)
}
func (m *StartSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartSessionRequest.Marshal(b, m, deterministic)
}
func (m *StartSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartSessionRequest.Merge(m, src)
}
func (m *StartSessionRequest) XXX_Size() int {
	return xxx_messageInfo_StartSessionRequest.Size(m)
}
func (m *StartSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartSessionRequest proto.InternalMessageInfo

func (m *StartSessionRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *StartSessionRequest) GetLocationUid() string {
	if m != nil {
		return m.LocationUid
	}
	return ""
}

func (m *StartSessionRequest) GetEvseUid() string {
	if m != nil {
		return m.EvseUid
	}
	return ""
}

type StartSessionResponse struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	AuthorizationId      string   `protobuf:"bytes,3,opt,name=authorizationId,proto3" json:"authorizationId,omitempty"`
	LocationUid          string   `protobuf:"bytes,4,opt,name=location_uid,json=locationUid,proto3" json:"location_uid,omitempty"`
	EvseUid              string   `protobuf:"bytes,5,opt,name=evse_uid,json=evseUid,proto3" json:"evse_uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartSessionResponse) Reset()         { *m = StartSessionResponse{} }
func (m *StartSessionResponse) String() string { return proto.CompactTextString(m) }
func (*StartSessionResponse) ProtoMessage()    {}
func (*StartSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c9ab853259f9e2c, []int{3}
}

func (m *StartSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartSessionResponse.Unmarshal(m, b)
}
func (m *StartSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartSessionResponse.Marshal(b, m, deterministic)
}
func (m *StartSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartSessionResponse.Merge(m, src)
}
func (m *StartSessionResponse) XXX_Size() int {
	return xxx_messageInfo_StartSessionResponse.Size(m)
}
func (m *StartSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartSessionResponse proto.InternalMessageInfo

func (m *StartSessionResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *StartSessionResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *StartSessionResponse) GetAuthorizationId() string {
	if m != nil {
		return m.AuthorizationId
	}
	return ""
}

func (m *StartSessionResponse) GetLocationUid() string {
	if m != nil {
		return m.LocationUid
	}
	return ""
}

func (m *StartSessionResponse) GetEvseUid() string {
	if m != nil {
		return m.EvseUid
	}
	return ""
}

type StopSessionRequest struct {
	SessionUid           string   `protobuf:"bytes,1,opt,name=session_uid,json=sessionUid,proto3" json:"session_uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopSessionRequest) Reset()         { *m = StopSessionRequest{} }
func (m *StopSessionRequest) String() string { return proto.CompactTextString(m) }
func (*StopSessionRequest) ProtoMessage()    {}
func (*StopSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c9ab853259f9e2c, []int{4}
}

func (m *StopSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopSessionRequest.Unmarshal(m, b)
}
func (m *StopSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopSessionRequest.Marshal(b, m, deterministic)
}
func (m *StopSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopSessionRequest.Merge(m, src)
}
func (m *StopSessionRequest) XXX_Size() int {
	return xxx_messageInfo_StopSessionRequest.Size(m)
}
func (m *StopSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopSessionRequest proto.InternalMessageInfo

func (m *StopSessionRequest) GetSessionUid() string {
	if m != nil {
		return m.SessionUid
	}
	return ""
}

type StopSessionResponse struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	SessionUid           string   `protobuf:"bytes,3,opt,name=session_uid,json=sessionUid,proto3" json:"session_uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopSessionResponse) Reset()         { *m = StopSessionResponse{} }
func (m *StopSessionResponse) String() string { return proto.CompactTextString(m) }
func (*StopSessionResponse) ProtoMessage()    {}
func (*StopSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c9ab853259f9e2c, []int{5}
}

func (m *StopSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopSessionResponse.Unmarshal(m, b)
}
func (m *StopSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopSessionResponse.Marshal(b, m, deterministic)
}
func (m *StopSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopSessionResponse.Merge(m, src)
}
func (m *StopSessionResponse) XXX_Size() int {
	return xxx_messageInfo_StopSessionResponse.Size(m)
}
func (m *StopSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopSessionResponse proto.InternalMessageInfo

func (m *StopSessionResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *StopSessionResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *StopSessionResponse) GetSessionUid() string {
	if m != nil {
		return m.SessionUid
	}
	return ""
}

type UnlockConnectorRequest struct {
	LocationUid          string   `protobuf:"bytes,1,opt,name=location_uid,json=locationUid,proto3" json:"location_uid,omitempty"`
	EvseUid              string   `protobuf:"bytes,2,opt,name=evse_uid,json=evseUid,proto3" json:"evse_uid,omitempty"`
	ConnectorUid         string   `protobuf:"bytes,3,opt,name=connector_uid,json=connectorUid,proto3" json:"connector_uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnlockConnectorRequest) Reset()         { *m = UnlockConnectorRequest{} }
func (m *UnlockConnectorRequest) String() string { return proto.CompactTextString(m) }
func (*UnlockConnectorRequest) ProtoMessage()    {}
func (*UnlockConnectorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c9ab853259f9e2c, []int{6}
}

func (m *UnlockConnectorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlockConnectorRequest.Unmarshal(m, b)
}
func (m *UnlockConnectorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlockConnectorRequest.Marshal(b, m, deterministic)
}
func (m *UnlockConnectorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlockConnectorRequest.Merge(m, src)
}
func (m *UnlockConnectorRequest) XXX_Size() int {
	return xxx_messageInfo_UnlockConnectorRequest.Size(m)
}
func (m *UnlockConnectorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlockConnectorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnlockConnectorRequest proto.InternalMessageInfo

func (m *UnlockConnectorRequest) GetLocationUid() string {
	if m != nil {
		return m.LocationUid
	}
	return ""
}

func (m *UnlockConnectorRequest) GetEvseUid() string {
	if m != nil {
		return m.EvseUid
	}
	return ""
}

func (m *UnlockConnectorRequest) GetConnectorUid() string {
	if m != nil {
		return m.ConnectorUid
	}
	return ""
}

type UnlockConnectorResponse struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	LocationUid          string   `protobuf:"bytes,3,opt,name=location_uid,json=locationUid,proto3" json:"location_uid,omitempty"`
	EvseUid              string   `protobuf:"bytes,4,opt,name=evse_uid,json=evseUid,proto3" json:"evse_uid,omitempty"`
	ConnectorUid         string   `protobuf:"bytes,5,opt,name=connector_uid,json=connectorUid,proto3" json:"connector_uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnlockConnectorResponse) Reset()         { *m = UnlockConnectorResponse{} }
func (m *UnlockConnectorResponse) String() string { return proto.CompactTextString(m) }
func (*UnlockConnectorResponse) ProtoMessage()    {}
func (*UnlockConnectorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c9ab853259f9e2c, []int{7}
}

func (m *UnlockConnectorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlockConnectorResponse.Unmarshal(m, b)
}
func (m *UnlockConnectorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlockConnectorResponse.Marshal(b, m, deterministic)
}
func (m *UnlockConnectorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlockConnectorResponse.Merge(m, src)
}
func (m *UnlockConnectorResponse) XXX_Size() int {
	return xxx_messageInfo_UnlockConnectorResponse.Size(m)
}
func (m *UnlockConnectorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlockConnectorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnlockConnectorResponse proto.InternalMessageInfo

func (m *UnlockConnectorResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UnlockConnectorResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *UnlockConnectorResponse) GetLocationUid() string {
	if m != nil {
		return m.LocationUid
	}
	return ""
}

func (m *UnlockConnectorResponse) GetEvseUid() string {
	if m != nil {
		return m.EvseUid
	}
	return ""
}

func (m *UnlockConnectorResponse) GetConnectorUid() string {
	if m != nil {
		return m.ConnectorUid
	}
	return ""
}

func init() {
	proto.RegisterType((*ReserveNowRequest)(nil), "command.ReserveNowRequest")
	proto.RegisterType((*ReserveNowResponse)(nil), "command.ReserveNowResponse")
	proto.RegisterType((*StartSessionRequest)(nil), "command.StartSessionRequest")
	proto.RegisterType((*StartSessionResponse)(nil), "command.StartSessionResponse")
	proto.RegisterType((*StopSessionRequest)(nil), "command.StopSessionRequest")
	proto.RegisterType((*StopSessionResponse)(nil), "command.StopSessionResponse")
	proto.RegisterType((*UnlockConnectorRequest)(nil), "command.UnlockConnectorRequest")
	proto.RegisterType((*UnlockConnectorResponse)(nil), "command.UnlockConnectorResponse")
}

func init() { proto.RegisterFile("ocpirpc/command.proto", fileDescriptor_6c9ab853259f9e2c) }

var fileDescriptor_6c9ab853259f9e2c = []byte{
	// 499 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0xd5, 0xda, 0xb9, 0xd0, 0x49, 0xda, 0x8a, 0x05, 0xda, 0xe0, 0x16, 0x25, 0xb4, 0x20, 0xe5,
	0x85, 0x46, 0x02, 0xf1, 0x03, 0x14, 0x24, 0x2a, 0x24, 0x1e, 0x1c, 0xf2, 0xc2, 0x03, 0x91, 0x6b,
	0x8f, 0xda, 0x15, 0x89, 0xc7, 0xec, 0xae, 0xc3, 0xed, 0x13, 0xf8, 0x0d, 0xc4, 0x7f, 0x20, 0xf1,
	0x61, 0xc8, 0x97, 0x04, 0x7b, 0x9d, 0x3a, 0x8a, 0x78, 0x9c, 0xeb, 0x39, 0x67, 0x76, 0x76, 0xe0,
	0x1e, 0xf9, 0x91, 0x90, 0x91, 0x3f, 0xf2, 0x69, 0x3e, 0xf7, 0xc2, 0xe0, 0x2c, 0x92, 0xa4, 0x89,
	0xb7, 0x73, 0xf3, 0xe4, 0x07, 0x83, 0xdb, 0x2e, 0x2a, 0x94, 0x0b, 0x7c, 0x4b, 0x9f, 0x5d, 0xfc,
	0x14, 0xa3, 0xd2, 0xfc, 0x10, 0xda, 0xb1, 0x42, 0x39, 0x15, 0x41, 0x8f, 0x0d, 0xd8, 0xd0, 0x76,
	0x5b, 0x89, 0x79, 0x11, 0xf0, 0x3e, 0x74, 0xf0, 0x4b, 0x24, 0xe4, 0xd7, 0x69, 0xe0, 0x69, 0xec,
	0x59, 0x03, 0x36, 0xdc, 0x71, 0x21, 0x73, 0xbd, 0xf4, 0x34, 0xf2, 0x87, 0xd0, 0x9d, 0x91, 0xef,
	0x69, 0x41, 0xe1, 0x34, 0x16, 0x41, 0xcf, 0x4e, 0x33, 0x3a, 0x4b, 0xdf, 0x44, 0x04, 0xfc, 0x3e,
	0xdc, 0xc2, 0x85, 0xc2, 0x34, 0xdc, 0x48, 0xc3, 0xed, 0xc4, 0x9e, 0x88, 0xe0, 0xe4, 0x37, 0x03,
	0x5e, 0x64, 0xa3, 0x22, 0x0a, 0x15, 0xf2, 0x3d, 0xb0, 0x56, 0x4c, 0x2c, 0x11, 0xf0, 0x03, 0x68,
	0x29, 0xed, 0xe9, 0x58, 0xe5, 0x04, 0x72, 0x8b, 0x3f, 0x82, 0x5d, 0x99, 0x56, 0xa7, 0x58, 0x17,
	0x19, 0xba, 0xed, 0x96, 0x9d, 0xa6, 0x86, 0xc6, 0x46, 0x0d, 0xcd, 0x7a, 0x0d, 0xad, 0xb2, 0x86,
	0x19, 0xdc, 0x19, 0x6b, 0x4f, 0xea, 0x31, 0x2a, 0x25, 0x28, 0xdc, 0x38, 0x52, 0x13, 0xcd, 0xaa,
	0x47, 0xb3, 0xcb, 0x68, 0xbf, 0x18, 0xdc, 0x2d, 0xc3, 0x6d, 0x39, 0xb3, 0x21, 0xec, 0x7b, 0xb1,
	0xbe, 0x26, 0x29, 0xbe, 0x15, 0xa7, 0xb6, 0xe3, 0x9a, 0xee, 0x0a, 0xd1, 0x46, 0x3d, 0xd1, 0x66,
	0x99, 0xe8, 0x73, 0xe0, 0x63, 0x4d, 0x91, 0x31, 0x95, 0x3e, 0x74, 0x54, 0xe6, 0x49, 0x6b, 0x58,
	0xf6, 0x16, 0xb9, 0x2b, 0x29, 0xfb, 0x90, 0x4c, 0xb3, 0x50, 0xb6, 0xa5, 0x3a, 0xa3, 0xbf, 0x5d,
	0xe9, 0xff, 0x1d, 0x0e, 0x26, 0xe1, 0x8c, 0xfc, 0x8f, 0xe7, 0x14, 0x86, 0xe8, 0x6b, 0x92, 0x4b,
	0x6a, 0xa6, 0x5c, 0x56, 0x2f, 0xd7, 0x2a, 0xc9, 0xe5, 0xa7, 0xb0, 0xeb, 0x2f, 0x3b, 0x16, 0xa0,
	0xbb, 0x2b, 0x67, 0x02, 0xfe, 0x93, 0xc1, 0x61, 0x05, 0x7d, 0x4b, 0x85, 0xff, 0xf5, 0xe1, 0xaa,
	0x34, 0x9b, 0x55, 0x9a, 0x4f, 0xff, 0x58, 0xb0, 0x77, 0x9e, 0xdd, 0x8b, 0x31, 0xca, 0x85, 0xf0,
	0x91, 0xbf, 0x02, 0xf8, 0xf7, 0x4f, 0xb9, 0x73, 0xb6, 0xbc, 0x2e, 0x95, 0x53, 0xe2, 0x1c, 0xad,
	0x8d, 0xe5, 0x22, 0xdf, 0x40, 0xb7, 0xb8, 0xbc, 0xfc, 0x78, 0x95, 0xbc, 0xe6, 0x0b, 0x39, 0x0f,
	0x6e, 0x88, 0xe6, 0xcd, 0x5e, 0x43, 0xa7, 0xb0, 0x2a, 0xfc, 0xa8, 0x90, 0x6d, 0xee, 0x9d, 0x73,
	0xbc, 0x3e, 0x98, 0x77, 0x7a, 0x07, 0xfb, 0xc6, 0xb3, 0xf0, 0xfe, 0xaa, 0x60, 0xfd, 0xba, 0x38,
	0x83, 0x9b, 0x13, 0xb2, 0xae, 0x2f, 0x1e, 0xbf, 0x3f, 0xbd, 0x12, 0xfa, 0x3a, 0xbe, 0x4c, 0x32,
	0x47, 0xca, 0xd3, 0x62, 0x4e, 0x9a, 0x46, 0x57, 0xf4, 0x24, 0xb9, 0xd1, 0xa3, 0xfc, 0x50, 0x5f,
	0xb6, 0xd2, 0x0b, 0xfd, 0xec, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x98, 0x7f, 0x5a, 0x1b, 0xba,
	0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CommandServiceClient is the client API for CommandService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommandServiceClient interface {
	ReserveNow(ctx context.Context, in *ReserveNowRequest, opts ...grpc.CallOption) (*ReserveNowResponse, error)
	StartSession(ctx context.Context, in *StartSessionRequest, opts ...grpc.CallOption) (*StartSessionResponse, error)
	StopSession(ctx context.Context, in *StopSessionRequest, opts ...grpc.CallOption) (*StopSessionResponse, error)
	UnlockConnector(ctx context.Context, in *UnlockConnectorRequest, opts ...grpc.CallOption) (*UnlockConnectorResponse, error)
}

type commandServiceClient struct {
	cc *grpc.ClientConn
}

func NewCommandServiceClient(cc *grpc.ClientConn) CommandServiceClient {
	return &commandServiceClient{cc}
}

func (c *commandServiceClient) ReserveNow(ctx context.Context, in *ReserveNowRequest, opts ...grpc.CallOption) (*ReserveNowResponse, error) {
	out := new(ReserveNowResponse)
	err := c.cc.Invoke(ctx, "/command.CommandService/ReserveNow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commandServiceClient) StartSession(ctx context.Context, in *StartSessionRequest, opts ...grpc.CallOption) (*StartSessionResponse, error) {
	out := new(StartSessionResponse)
	err := c.cc.Invoke(ctx, "/command.CommandService/StartSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commandServiceClient) StopSession(ctx context.Context, in *StopSessionRequest, opts ...grpc.CallOption) (*StopSessionResponse, error) {
	out := new(StopSessionResponse)
	err := c.cc.Invoke(ctx, "/command.CommandService/StopSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commandServiceClient) UnlockConnector(ctx context.Context, in *UnlockConnectorRequest, opts ...grpc.CallOption) (*UnlockConnectorResponse, error) {
	out := new(UnlockConnectorResponse)
	err := c.cc.Invoke(ctx, "/command.CommandService/UnlockConnector", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CommandServiceServer is the server API for CommandService service.
type CommandServiceServer interface {
	ReserveNow(context.Context, *ReserveNowRequest) (*ReserveNowResponse, error)
	StartSession(context.Context, *StartSessionRequest) (*StartSessionResponse, error)
	StopSession(context.Context, *StopSessionRequest) (*StopSessionResponse, error)
	UnlockConnector(context.Context, *UnlockConnectorRequest) (*UnlockConnectorResponse, error)
}

// UnimplementedCommandServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCommandServiceServer struct {
}

func (*UnimplementedCommandServiceServer) ReserveNow(ctx context.Context, req *ReserveNowRequest) (*ReserveNowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReserveNow not implemented")
}
func (*UnimplementedCommandServiceServer) StartSession(ctx context.Context, req *StartSessionRequest) (*StartSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartSession not implemented")
}
func (*UnimplementedCommandServiceServer) StopSession(ctx context.Context, req *StopSessionRequest) (*StopSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopSession not implemented")
}
func (*UnimplementedCommandServiceServer) UnlockConnector(ctx context.Context, req *UnlockConnectorRequest) (*UnlockConnectorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnlockConnector not implemented")
}

func RegisterCommandServiceServer(s *grpc.Server, srv CommandServiceServer) {
	s.RegisterService(&_CommandService_serviceDesc, srv)
}

func _CommandService_ReserveNow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReserveNowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandServiceServer).ReserveNow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/command.CommandService/ReserveNow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandServiceServer).ReserveNow(ctx, req.(*ReserveNowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommandService_StartSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandServiceServer).StartSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/command.CommandService/StartSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandServiceServer).StartSession(ctx, req.(*StartSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommandService_StopSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandServiceServer).StopSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/command.CommandService/StopSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandServiceServer).StopSession(ctx, req.(*StopSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommandService_UnlockConnector_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnlockConnectorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandServiceServer).UnlockConnector(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/command.CommandService/UnlockConnector",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandServiceServer).UnlockConnector(ctx, req.(*UnlockConnectorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CommandService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "command.CommandService",
	HandlerType: (*CommandServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReserveNow",
			Handler:    _CommandService_ReserveNow_Handler,
		},
		{
			MethodName: "StartSession",
			Handler:    _CommandService_StartSession_Handler,
		},
		{
			MethodName: "StopSession",
			Handler:    _CommandService_StopSession_Handler,
		},
		{
			MethodName: "UnlockConnector",
			Handler:    _CommandService_UnlockConnector_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ocpirpc/command.proto",
}

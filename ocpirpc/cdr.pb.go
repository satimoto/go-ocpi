// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ocpirpc/cdr.proto

package ocpirpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CdrCreatedRequest struct {
	CdrUid               string   `protobuf:"bytes,1,opt,name=cdr_uid,json=cdrUid,proto3" json:"cdr_uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CdrCreatedRequest) Reset()         { *m = CdrCreatedRequest{} }
func (m *CdrCreatedRequest) String() string { return proto.CompactTextString(m) }
func (*CdrCreatedRequest) ProtoMessage()    {}
func (*CdrCreatedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ae38dcf97755a6b, []int{0}
}

func (m *CdrCreatedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CdrCreatedRequest.Unmarshal(m, b)
}
func (m *CdrCreatedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CdrCreatedRequest.Marshal(b, m, deterministic)
}
func (m *CdrCreatedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CdrCreatedRequest.Merge(m, src)
}
func (m *CdrCreatedRequest) XXX_Size() int {
	return xxx_messageInfo_CdrCreatedRequest.Size(m)
}
func (m *CdrCreatedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CdrCreatedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CdrCreatedRequest proto.InternalMessageInfo

func (m *CdrCreatedRequest) GetCdrUid() string {
	if m != nil {
		return m.CdrUid
	}
	return ""
}

type CdrCreatedResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CdrCreatedResponse) Reset()         { *m = CdrCreatedResponse{} }
func (m *CdrCreatedResponse) String() string { return proto.CompactTextString(m) }
func (*CdrCreatedResponse) ProtoMessage()    {}
func (*CdrCreatedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ae38dcf97755a6b, []int{1}
}

func (m *CdrCreatedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CdrCreatedResponse.Unmarshal(m, b)
}
func (m *CdrCreatedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CdrCreatedResponse.Marshal(b, m, deterministic)
}
func (m *CdrCreatedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CdrCreatedResponse.Merge(m, src)
}
func (m *CdrCreatedResponse) XXX_Size() int {
	return xxx_messageInfo_CdrCreatedResponse.Size(m)
}
func (m *CdrCreatedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CdrCreatedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CdrCreatedResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CdrCreatedRequest)(nil), "cdr.CdrCreatedRequest")
	proto.RegisterType((*CdrCreatedResponse)(nil), "cdr.CdrCreatedResponse")
}

func init() { proto.RegisterFile("ocpirpc/cdr.proto", fileDescriptor_6ae38dcf97755a6b) }

var fileDescriptor_6ae38dcf97755a6b = []byte{
	// 178 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x8f, 0x31, 0x0b, 0xc2, 0x30,
	0x10, 0x46, 0x29, 0x42, 0xc5, 0x6c, 0x0d, 0x62, 0xc5, 0x49, 0xba, 0xa8, 0x60, 0x1b, 0xd0, 0xd9,
	0xc5, 0x8e, 0x6e, 0x15, 0x17, 0x17, 0x69, 0xef, 0x42, 0xcd, 0x50, 0x2f, 0x5e, 0x52, 0x7f, 0xbf,
	0xb4, 0x76, 0x10, 0x3a, 0xde, 0xf1, 0xf8, 0x1e, 0x4f, 0x44, 0x04, 0xd6, 0xb0, 0x05, 0x05, 0xc8,
	0x99, 0x65, 0xf2, 0x24, 0x27, 0x80, 0x9c, 0xec, 0x45, 0x94, 0x23, 0xe7, 0xac, 0x4b, 0xaf, 0xb1,
	0xd0, 0xef, 0x56, 0x3b, 0x2f, 0x63, 0x31, 0x05, 0xe4, 0x47, 0x6b, 0x70, 0x19, 0xac, 0x83, 0xed,
	0xac, 0x08, 0x01, 0xf9, 0x66, 0x30, 0x99, 0x0b, 0xf9, 0x4f, 0x3b, 0x4b, 0x2f, 0xa7, 0x0f, 0x17,
	0x21, 0x72, 0xe4, 0xab, 0xe6, 0x8f, 0x01, 0x2d, 0x4f, 0xfd, 0x35, 0x30, 0x72, 0x91, 0x75, 0xc2,
	0x91, 0x62, 0x15, 0x8f, 0xfe, 0xbf, 0xb1, 0xf3, 0xee, 0xbe, 0xa9, 0x8d, 0x7f, 0xb6, 0x55, 0x06,
	0xd4, 0x28, 0x57, 0x7a, 0xd3, 0x90, 0x27, 0x55, 0x53, 0xda, 0x15, 0xa4, 0xa5, 0x35, 0x6a, 0x48,
	0xa9, 0xc2, 0xbe, 0xe3, 0xf8, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x6b, 0xdb, 0x18, 0x6c, 0xdc, 0x00,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CdrServiceClient is the client API for CdrService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CdrServiceClient interface {
	CdrCreated(ctx context.Context, in *CdrCreatedRequest, opts ...grpc.CallOption) (*CdrCreatedResponse, error)
}

type cdrServiceClient struct {
	cc *grpc.ClientConn
}

func NewCdrServiceClient(cc *grpc.ClientConn) CdrServiceClient {
	return &cdrServiceClient{cc}
}

func (c *cdrServiceClient) CdrCreated(ctx context.Context, in *CdrCreatedRequest, opts ...grpc.CallOption) (*CdrCreatedResponse, error) {
	out := new(CdrCreatedResponse)
	err := c.cc.Invoke(ctx, "/cdr.CdrService/CdrCreated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CdrServiceServer is the server API for CdrService service.
type CdrServiceServer interface {
	CdrCreated(context.Context, *CdrCreatedRequest) (*CdrCreatedResponse, error)
}

// UnimplementedCdrServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCdrServiceServer struct {
}

func (*UnimplementedCdrServiceServer) CdrCreated(ctx context.Context, req *CdrCreatedRequest) (*CdrCreatedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CdrCreated not implemented")
}

func RegisterCdrServiceServer(s *grpc.Server, srv CdrServiceServer) {
	s.RegisterService(&_CdrService_serviceDesc, srv)
}

func _CdrService_CdrCreated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CdrCreatedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CdrServiceServer).CdrCreated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cdr.CdrService/CdrCreated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CdrServiceServer).CdrCreated(ctx, req.(*CdrCreatedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CdrService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cdr.CdrService",
	HandlerType: (*CdrServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CdrCreated",
			Handler:    _CdrService_CdrCreated_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ocpirpc/cdr.proto",
}
